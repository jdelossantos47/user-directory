{"ast":null,"code":"import _slicedToArray from \"/Users/jonathandelossantos/Desktop/user-directory/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jonathandelossantos/Desktop/user-directory/src/components/Table.js\";\nimport React, { useState, useContext } from 'react';\nimport { useGet } from \"../hooks/API.js\";\nimport \"./Table.css\";\nimport Button from \"./Button.js\";\nimport { EmployeeContext } from './EmployeeContext.js'; //Check out 20-State/03-Stu_useState\n\nfunction Table() {\n  // exists in case if ever built functionality in to change the url, which would get a new set of employees. Currently not being used other than to store the url.\n  const _useState = useState(\"https://randomuser.me/api/?results=10\"),\n        _useState2 = _slicedToArray(_useState, 1),\n        url = _useState2[0]; // custom hook used for getting the employees from the api and storing the sort functions\n\n\n  const _useGet = useGet(url),\n        sortFunc = _useGet.sortFunc; // contains the employees to display in the table\n\n\n  const _useContext = useContext(EmployeeContext),\n        displayedEmployees = _useContext.displayedEmployees;\n\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    onClick: () => sortFunc(\"name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"First Name\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"UID\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(\"td\", {\n    onClick: () => sortFunc(\"age\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Age\")))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, displayedEmployees.map(employee => {\n    return React.createElement(\"tr\", {\n      key: employee.login.uuid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, employee.name.first), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, employee.name.last), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, employee.login.uuid), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, employee.gender), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, employee.email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, employee.dob.age));\n  })));\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/jonathandelossantos/Desktop/user-directory/src/components/Table.js"],"names":["React","useState","useContext","useGet","Button","EmployeeContext","Table","url","sortFunc","displayedEmployees","map","employee","login","uuid","name","first","last","gender","email","dob","age"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,eAAT,QAAgC,sBAAhC,C,CAEA;;AACA,SAASC,KAAT,GAAiB;AACb;AADa,oBAECL,QAAQ,CAAC,uCAAD,CAFT;AAAA;AAAA,QAENM,GAFM,kBAGb;;;AAHa,kBAIQJ,MAAM,CAACI,GAAD,CAJd;AAAA,QAILC,QAJK,WAILA,QAJK,EAKb;;;AALa,sBAMiBN,UAAU,CAACG,eAAD,CAN3B;AAAA,QAMLI,kBANK,eAMLA,kBANK;;AAQb,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC,MAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAArC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EAMI;AAAI,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,KAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAApC,CANJ,CADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,kBAAkB,CAACC,GAAnB,CAAuBC,QAAQ,IAAI;AAChC,WACI;AAAI,MAAA,GAAG,EAAEA,QAAQ,CAACC,KAAT,CAAeC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,QAAQ,CAACG,IAAT,CAAcC,KAAnB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,QAAQ,CAACG,IAAT,CAAcE,IAAnB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,QAAQ,CAACC,KAAT,CAAeC,IAApB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,QAAQ,CAACM,MAAd,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,QAAQ,CAACO,KAAd,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,QAAQ,CAACQ,GAAT,CAAaC,GAAlB,CANJ,CADJ;AAUH,GAXA,CADL,CAXJ,CADJ;AA6BH;;AACD,eAAed,KAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useGet } from \"../hooks/API.js\"\nimport \"./Table.css\"\nimport Button from \"./Button.js\"\nimport { EmployeeContext } from './EmployeeContext.js';\n\n//Check out 20-State/03-Stu_useState\nfunction Table() {\n    // exists in case if ever built functionality in to change the url, which would get a new set of employees. Currently not being used other than to store the url.\n    const [url] = useState(\"https://randomuser.me/api/?results=10\")\n    // custom hook used for getting the employees from the api and storing the sort functions\n    const { sortFunc } = useGet(url);\n    // contains the employees to display in the table\n    const { displayedEmployees} = useContext(EmployeeContext)\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <td onClick={() => sortFunc(\"name\")}><Button>First Name</Button></td>\n                    <td>Last Name</td>\n                    <td>UID</td>\n                    <td>Gender</td>\n                    <td>E-mail</td>\n                    <td onClick={() => sortFunc(\"age\")}><Button>Age</Button></td>\n                </tr>\n            </thead>\n            <tbody>\n                {displayedEmployees.map(employee => {\n                    return (\n                        <tr key={employee.login.uuid}>\n                            <td>{employee.name.first}</td>\n                            <td>{employee.name.last}</td>\n                            <td>{employee.login.uuid}</td>\n                            <td>{employee.gender}</td>\n                            <td>{employee.email}</td>\n                            <td>{employee.dob.age}</td>\n                        </tr>\n                    )\n                }\n                )}\n            </tbody>\n        </table>\n    )\n}\nexport default Table;"]},"metadata":{},"sourceType":"module"}